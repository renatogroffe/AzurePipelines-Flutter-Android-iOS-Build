trigger:
- main

variables:
  vmImageName: 'macos-14'
  projectPath: './src/appgroffe/'

pool:
  vmImage: ubuntu-latest

stages:
- stage: BuildAndroid
  displayName: Build Android
  jobs:
  - job: BuildAndroid
    displayName: Build Android
    pool:
      vmImage: $(vmImageName)
    steps:
    - script: |
        sysctl -n hw.memsize
        echo ''
        vm_stat | grep "free"
      displayName: Exibir informacoes sobre memoria
    - script: |
        sysctl -n hw.ncpu
        echo ''
        sysctl -a | grep cpu
      displayName: Exibir informacoes sobre CPU
    - script: |
        sysctl -a | grep -E "hw.memsize|hw.ncpu"
      displayName: Informacoes sobre CPU e memoria
    - script: sw_vers -productVersion
      displayName: Exibir a versao atual do macOS
    - task: JavaToolInstaller@0
      inputs:
        versionSpec: '17'
        jdkArchitectureOption: 'x64'
        jdkSourceOption: 'PreInstalled'
      displayName: Configurar uso do Java 17
    - task: FlutterInstall@0
      inputs:
        mode: 'auto'
        channel: 'stable'
        version: 'latest'
      displayName: Instalar o Flutter
    - script: flutter --version
      displayName: Exibir a versao instalada do Flutter
    - script: flutter doctor -v
      displayName: Informacoes e configuracoes do Flutter
    - task: FlutterBuild@0
      inputs:
        target: 'apk'
        projectDirectory: '$(projectPath)'
      displayName: Executar Build para Android
- stage: BuildIOS
  displayName: Build iOS
  dependsOn: BuildAndroid
  jobs:
  - job: BuildIOS
    displayName: Build iOS
    pool:
      vmImage: $(vmImageName)
    steps:
    - script: sw_vers -productVersion
      displayName: Exibir a versao atual do macOS
    - task: FlutterInstall@0
      inputs:
        mode: 'auto'
        channel: 'stable'
        version: 'latest'
      displayName: Instalar o Flutter
    - script: flutter --version
      displayName: Exibir a versao instalada do Flutter
    - script: flutter doctor -v
      displayName: Informacoes e configuracoes do Flutter
    - task: FlutterBuild@0
      inputs:
        target: 'ios'
        projectDirectory: '$(projectPath)'
        iosTargetPlatform: 'simulator'
      displayName: Executar Build para iOS
